//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Consumer {
  id String [pk]
  firstName String
  lastName String
  email String [unique]
  displayEmail String [not null]
  handle String [unique]
  phone String [unique]
  dateOfBirth String
  isLocked Boolean [not null, default: false]
  isDisabled Boolean [not null, default: false]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
  socialSecurityNumber String
  address Address
  verificationData KYC
  cryptoWallets CryptoWallet [not null]
  paymentMethods PaymentMethod [not null]
  circleAccountData Circle
}

Table Address {
  id String [pk]
  streetLine1 String [not null]
  streetLine2 String
  city String [not null]
  countryCode String [not null]
  regionCode String [not null]
  postalCode String [not null]
  consumer Consumer [not null]
  consumerID String [unique, not null]
}

Table KYC {
  id String [pk]
  kycCheckReference String
  documentCheckReference String
  provider KYCProvider [not null, default: 'SARDINE']
  riskRating String
  isSuspectedFraud Boolean [not null, default: false]
  kycCheckStatus KYCStatus [not null, default: 'NOT_SUBMITTED']
  documentVerificationStatus DocumentVerificationStatus [not null, default: 'REQUIRED']
  documentVerificationTimestamp DateTime
  kycVerificationTimestamp DateTime
  sanctionLevel String
  riskLevel String
  consumer Consumer [not null]
  consumerID String [unique, not null]
}

Table CryptoWallet {
  id String [pk]
  address String [unique, not null]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
  name String
  chainType String
  isEVMCompatible Boolean
  status WalletStatus [not null, default: 'PENDING']
  riskScore Float
  consumer Consumer [not null]
  consumerID String [not null]
}

Table PaymentMethod {
  id String [pk]
  name String
  type PaymentMethodType [not null]
  paymentToken String [unique, not null]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
  paymentProvider PaymentProvider [not null]
  status PaymentMethodStatus [not null]
  isDefault Boolean [not null, default: false]
  imageUri String
  consumer Consumer [not null]
  consumerID String [not null]
  cardData Card
  achData ACH
}

Table Card {
  id String [pk]
  cardType String
  scheme String
  first6Digits String [not null]
  last4Digits String [not null]
  authCode String
  authReason String
  paymentMethod PaymentMethod [not null]
  paymentMethodID String [unique, not null]
}

Table ACH {
  id String [pk]
  accountID String [not null]
  accessToken String [not null]
  itemID String [not null]
  mask String [not null]
  accountType String [not null]
  paymentMethod PaymentMethod [not null]
  paymentMethodID String [unique, not null]
}

Table Circle {
  id String [pk]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
  walletID String [unique, not null]
  consumer Consumer [not null]
  consumerID String [unique, not null]
}

Table Otp {
  id String [pk]
  otpIdentifier String [not null]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
  otp Int [not null]
  otpExpirationTimestamp DateTime [not null]
  identityType IdentityType [not null]

  indexes {
    (otpIdentifier, identityType) [unique]
  }
}

Table LimitProfile {
  id String [pk]
  name String [not null]
  daily Float
  weekly Float
  monthly Float [not null]
  maxTransaction Float [not null]
  minTransaction Float [not null]
  unsettledExposure Float
  LimitConfiguration LimitConfiguration [not null]
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
}

Table LimitConfiguration {
  id String [pk]
  isDefault Boolean [not null, default: false]
  priority Int [not null]
  profile LimitProfile [not null]
  profileID String [not null]
  transactionType TransactionType
  minProfileAge Int
  minBalanceInWallet Float
  minTotalTransactionAmount Float
  paymentMethodType PaymentMethodType
  createdTimestamp DateTime [default: `now()`]
  updatedTimestamp DateTime
}

Enum IdentityType {
  CONSUMER
  NOBA_ADMIN
}

Enum KYCStatus {
  NOT_SUBMITTED
  PENDING
  APPROVED
  FLAGGED
  REJECTED
}

Enum DocumentVerificationStatus {
  NOT_REQUIRED
  REQUIRED
  PENDING
  APPROVED
  REJECTED
  REJECTED_DOCUMENT_REQUIRES_RECAPTURE
  REJECTED_DOCUMENT_POOR_QUALITY
  REJECTED_DOCUMENT_INVALID_SIZE_OR_TYPE
  LIVE_PHOTO_VERIFIED
}

Enum WalletStatus {
  PENDING
  FLAGGED
  REJECTED
  APPROVED
  DELETED
}

Enum PaymentMethodType {
  CARD
  ACH
}

Enum PaymentProvider {
  CHECKOUT
}

Enum PaymentMethodStatus {
  FLAGGED
  REJECTED
  APPROVED
  UNSUPPORTED
  DELETED
}

Enum KYCProvider {
  SARDINE
}

Enum TransactionType {
  NOBA_WALLET
}

Ref: Address.consumerID - Consumer.id [delete: Cascade]

Ref: KYC.consumerID - Consumer.id [delete: Cascade]

Ref: CryptoWallet.consumerID > Consumer.id [delete: Cascade]

Ref: PaymentMethod.consumerID > Consumer.id [delete: Cascade]

Ref: Card.paymentMethodID - PaymentMethod.id [delete: Cascade]

Ref: ACH.paymentMethodID - PaymentMethod.id [delete: Cascade]

Ref: Circle.consumerID - Consumer.id [delete: Cascade]

Ref: LimitConfiguration.profileID > LimitProfile.id [delete: Cascade]