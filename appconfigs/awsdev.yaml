envType: "awsdev"

# ***** SENSITIVE PRODUCTION CONFIGURATIONS SUCH AS PASSWORDS,SECRETS SHOULDN'T BE PUT HERE,
# ***** INSTEAD SHOULD BE INJECTED FROM SECRETS AT RUNTIME OR SHOULD BE PASSED AS ENVIRONMENT VARIABLE

logFilePath: "noba_server.log"

awsRegion: "us-east-1"
awsDefaultRegion: "us-east-1"
awsAccountID: "210194402305"
awsMasterSecret: "LOWERS_MASTER_SECRET"

kms:
  context:
    stage: "development"
    purpose: "Noba Onramp app"
    origin: "us-east-1"
  ssn:
    awsSecretNameForGeneratorKeyArn: "TEST_SSN_GENERATOR_KEY_ARN"
    generatorKeyArn: "bogus-value"
    awsSecretNameForFollowUpKeyArn: "TEST_SSN_FOLLOW_UP_KEY_1_ARN"
    followUpKeyArn: "bogus-value"

#in production we should take it from vault, only for testing here, todo remove or create test api_key with limit on number of emails
sendgrid:
  awsSecretNameForApiKey: "TEST_SENDGRID_SECRET" #if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  apiKey: "bogus-value"

checkout:
  awsSecretNameForPublicKey: "TEST_CHECKOUT_PUBLIC_KEY" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForSecretKey: "TEST_CHECKOUT_SECRET_KEY"
  publicKey: "bogus-value"
  secretKey: "bogus-value"
  couponCode: "NY2018"
  partnerId: 123989
  processingChannelId: "pc_ka6ij3qluenufp5eovqqtw4xdu"
  webhookSignatureKey: "bogus-value"
  awsSecretNameForWebhookSignatureKey: "TEST_CHECKOUT_WEBHOOK_SIGNATURE_KEY"
  apiUrl: "https://api.sandbox.checkout.com"
  nobaWebhookUrl: "https://api-dev.noba.com/v1/vendors/checkout/webhooks"

twilio:
  awsSecretNameForSID: "TEST_TWILIO_SID"
  awsSecretNameForAuthToken: "TEST_TWILIO_SECRET"
  SID: ""
  authToken: ""
  fromPhoneNumber: "+14246553925"

sardine:
  awsSecretNameForSardineClientID: "TEST_SARDINE_CLIENT_ID" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForSardineSecretKey: "TEST_SARDINE_SECRET"
  awsSecretNameForSardineWebhookSecretKey: "TEST_SARDINE_WEBHOOK_SECRET"
  clientID: "bogus-value"
  secretKey: "bogus-value"
  webhookSecretKey: "bogus-value"
  sardineBaseUri: "https://api.sandbox.sardine.ai"

noba:
  appSecretKey: "7sjoNYZiZ3c6Z99wzVp2OLh0XbyRGtz9wj48MV6XfNscpY9W14kE4RDies/HuKsyCw7UJxz+RZAFoPx4t974Lw=="
  privateBearerToken: ""
  awsSecretKeyForPrivateBearerToken: "TEST_NOBA_PRIVATE_BEARER_TOKEN"
  awsSecretKeyForAppSecretKey: ""
  bubbleBearerToken: ""
  awsSecretKeyForBubbleBearerToken: "TEST_NOBA_BUBBLE_BEARER_TOKEN"
  transaction:
    spreadPercentage: ""
    awsSecretKeyForSpreadPercentage: "TEST_NOBA_SPREAD_PERCENTAGE"
    flatFeeDollars: ""
    awsSecretKeyForFlatFeeDollars: "TEST_NOBA_FLAT_FEE_DOLLARS"
    dynamicCreditCardFeePercentage: ""
    awsSecretKeyForDynamicCreditCardFeePercentage: "TEST_NOBA_DYNAMIC_CREDIT_CARD_FEE_PERCENTAGE"
    fixedCreditCardFee: ""
    awsSecretKeyForFixedCreditCardFee: "TEST_NOBA_FIXED_CREDIT_CARD_FEE_DOLLARS"
    slippageAllowedPercentage: ""
    awsSecretKeyForSlippageAllowedPercentage: "TEST_NOBA_SLIPPAGE_ALLOWED_PERCENTAGE"
    depositFeeAmount: ""
    awsSecretKeyForDepositFeeAmount: "TEST_NOBA_DEPOSIT_FEE_AMOUNT"
    depositFeePercentage: ""
    awsSecretKeyForDepositFeePercentage: "TEST_NOBA_DEPOSIT_FEE_PERCENTAGE"

zerohash:
  awsSecretNameForApiKey: "TEST_ZEROHASH_API_KEY" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForApiSecret: "TEST_ZEROHASH_API_SECRET" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForPassPhrase: "TEST_ZEROHASH_PASS_PHRASE" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForHost: "TEST_ZEROHASH_HOST"
  awsSecretNameForPlatformCode: "TEST_ZEROHASH_PLATFORM_CODE"
  apiKey: ""
  apiSecret: ""
  passPhrase: ""
  host: ""
  platformCode: ""
  proxyServerIP: "172.31.8.170"
  proxyServerPort: 3128

elliptic:
  awsSecretNameForApiKey: "TEST_ELLIPTIC_KEY"
  awsSecretNameForSecretKey: "TEST_ELLIPTIC_SECRET"
  apiKey: ""
  secretKey: ""
  baseUrl: "https://aml-api.elliptic.co"

configuration:
  lowAmountThreshold: 0.25
  highAmountThreshold: 75
  cryptoImageBaseUrl: "https://dj61eezhizi5l.cloudfront.net/assets/images/currency-logos/crypto"
  fiatImageBaseUrl: "https://dj61eezhizi5l.cloudfront.net/assets/images/currency-logos/fiat"

plaid:
  env: "sandbox"
  version: "2020-09-14"
  redirectUri: "http://localhost:8080/plaid/redirect_uri"
  awsSecretNameForRedirectUri: ""
  clientID: "62432d096685bc0013d030a8"
  awsSecretNameForClientID: ""
  secretKey: "3efe6f2aef4a7ab5d609149f96a35b"
  awsSecretNameForSecretKey: ""

circle:
  env: "sandbox"
  apiKey: ""
  awsSecretNameForApiKey: "TEST_CIRCLE_API_KEY"
  masterWalletID: ""
  awsSecretNameForMasterWalletID: "TEST_CIRCLE_MASTER_WALLET_ID"

nobaWorkflow:
  taskQueue: "NOBA_TASK_QUEUE"
  awsSecretNameForTaskQueue: "TEST_NOBA_WORKFLOW_TASK_QUEUE"
  clientUrl: ""
  awsSecretNameForClientUrl: "TEST_NOBA_WORKFLOW_CLIENT_URL"
  awsSecretForTemporalCloudCertificate: ""
  awsSecretForTemporalCloudPrivateKey: ""
  connectionTimeoutInMs: 1000
  namespace: "dev"

dependencies:
  emailClient: "SENDGRID"

mono:
  bearerToken: ""
  awsSecretNameForBearerToken: "TEST_MONO_BEARER_TOKEN"
  baseURL: ""
  awsSecretNameForBaseURL: "TEST_MONO_BASE_URL"
  nobaAccountID: ""
  awsSecretNameForNobaAccountID: "TEST_MONO_NOBA_ACCOUNT_ID"
  webhookSecret: ""
  awsSecretNameForWebhookSecret: "DEV_MONO_WEBHOOK_SECRET"

bubble:
  bearerToken: ""
  awsSecretNameForBearerToken: "TEST_BUBBLE_BEARER_TOKEN"
  baseURL: ""
  awsSecretNameForBaseURL: "TEST_BUBBLE_BASE_URL"

locationDataFileName: "countries+states.json"
dbDumpFilesBucketPath: "dump"
assetsBucketName: "prod-noba-assets"
supportedCryptoFileBucketPath: "assets/data/cryptocurrency_tokens.csv"
sanctionedCryptoWalletsFileBucketPath: "assets/data/sanctioned_wallets.csv"

# Should ONLY EVER be set in localdevelopment.yaml, e2e_test.yaml and awsdev.yaml!
staticDevOTP: 222222
