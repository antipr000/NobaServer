envType: "awsdev"

# ***** SENSITIVE PRODUCTION CONFIGURATIONS SUCH AS PASSWORDS,SECRETS SHOULDN'T BE PUT HERE,
# ***** INSTEAD SHOULD BE INJECTED FROM SECRETS AT RUNTIME OR SHOULD BE PASSED AS ENVIRONMENT VARIABLE

apiPrefix: "/v1"
logFilePath: "/home/ubuntu/noba_server.log"

awsRegion: "us-east-1"
awsDefaultRegion: "us-east-1"

kms:
  context:
    stage: "development"
    purpose: "Noba Onramp app"
    origin: "us-east-1"

# AWS KMS Encryption key references
# kmsGeneratorKeyID is global to all keys
# Each key followed by _keyID uses a prefix which is our alias to that key. This must match between KMS and our application.
awskms:
  kmsGeneratorKeyID: "arn:aws:kms:us-east-1:210194402305:alias/master-key"
  ssn-encryption-key_keyID: "arn:aws:kms:us-east-1:210194402305:key/39d511f4-c1ff-4d21-b6d5-c3347f0b671c"

#in production we should take it from vault, only for testing here, todo remove or create test api_key with limit on number of emails
sendgrid:
  awsSecretNameForApiKey: "TEST_SENDGRID_SECRET" #if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  apiKey: "bogus-value"

stripe:
  awsSecretNameForSecretKey: "TEST_STRIPE_SECRET" #if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  secretKey: "bogus-value"

trulioo:
  awsSecretNameForSecretKey: "" #if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForDocVApiKey: ""
  TruliooIDVApiKey: UGVyZWdyaW5lX1NhbmRib3hfSURWX0FQSV8yOkNvZGVuYW1lZ29kQDEyMzQ=
  TruliooDocVApiKey: UGVyZWdyaW5lX1NhbmRib3hfRG9jVl9BUElfMjpDb2RlbmFtZWdvZEAxMjM0

twilio:
  awsSecretNameForSID: ""
  awsSecretNameForAuthToken: ""
  SID: "AC4efa22156849ec40b383a80f45525409"
  authToken: "c34165debbb0a77e3507884e86b88772"
  fromPhoneNumber: "+19894557345"

mongo:
  awsSecretNameForUri: "DEV_DOCUMENT_DB_URI" # change to staging uri
  uri: "bogus-value"
  sslEnabled: true # swith to true when the uri is pointed to document db
  sslCAPath: rds-combined-ca-bundle.pem # bootstrapped in deploy scripts

sardine:
  awsSecretNameForSardineClientID: "TEST_SARDINE_CLIENT_ID" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForSardineSecretKey: "TEST_SARDINE_SECRET"
  clientID: "bogus-value"
  secretKey: "bogus-value"
  sardineBaseUri: "https://api.dev.sardine.ai"

noba:
  partnerID: "d4KZqfVKwSHWueOJhmgN-"

zerohash:
  awsSecretNameforApiKey: "TEST_ZEROHASH_API_KEY" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForApiSecret: "TEST_ZEROHASH_API_SECRET" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForPassPhrase: "TEST_ZEROHASH_PASS_PHRASE" # if this is present then we fetch the secret key from aws secret manager else we take it from the configs, for production environment we shouldn't put the secret in the config files
  awsSecretNameForHost: "TEST_ZEROHASH_HOST"
  apiKey: ""
  apiSecret: ""
  passPhrase: ""
  host: ""
